class CatalogoProdutos:
    def __init__(self):
        self.produtos = []
    
    def adicionar_produto(self, nome, categoria, marca, preco, avaliacao, vendas):
        self.produtos.append({
            'nome': nome,
            'categoria': categoria,
            'marca': marca,
            'preco': preco,
            'avaliacao': avaliacao,
            'vendas': vendas,
            'data_cadastro': datetime.now()
        })
    
    def ordenar_por(self, criterio):
        if criterio == 'preco':
            return sorted(self.produtos, key=lambda x: x['preco'])
        elif criterio == 'avaliacao':
            return sorted(self.produtos, key=lambda x: x['avaliacao'], reverse=True)
        elif criterio == 'vendas':
            return sorted(self.produtos, key=lambda x: x['vendas'], reverse=True)
        elif criterio == 'data':
            return sorted(self.produtos, key=lambda x: x['data_cadastro'], reverse=True)
        elif criterio == 'relevancia':
            return sorted(self.produtos, key=lambda x: (x['avaliacao'] * 0.6 + x['vendas'] * 0.4), reverse=True)
        else:
            return self.produtos
    
    def buscar_produtos(self, termo=None, categoria=None, marca=None, preco_min=None, preco_max=None):
        resultados = self.produtos
        if termo:
            resultados = [p for p in resultados if termo.lower() in p['nome'].lower()]
        if categoria:
            resultados = [p for p in resultados if categoria.lower() == p['categoria'].lower()]
        if marca:
            resultados = [p for p in resultados if marca.lower() == p['marca'].lower()]
        if preco_min is not None:
            resultados = [p for p in resultados if p['preco'] >= preco_min]
        if preco_max is not None:
            resultados = [p for p in resultados if p['preco'] <= preco_max]
        return resultados

# Exemplo de uso
if __name__ == "__main__":
    from datetime import datetime
    
    catalogo = CatalogoProdutos()
    catalogo.adicionar_produto("Smartphone X", "Eletrônicos", "TechBrand", 2500, 4.5, 1200)
    catalogo.adicionar_produto("Notebook Pro", "Eletrônicos", "TechBrand", 5500, 4.8, 850)
    catalogo.adicionar_produto("Fone Bluetooth", "Acessórios", "SoundPlus", 350, 4.2, 3000)
    
    print("Produtos ordenados por avaliação:")
    for produto in catalogo.ordenar_por('avaliacao'):
        print(f"{produto['nome']} - Avaliação: {produto['avaliacao']}")
    
    print("\nBusca por produtos da TechBrand:")
    for produto in catalogo.buscar_produtos(marca="TechBrand"):
        print(f"{produto['nome']} - {produto['marca']}")

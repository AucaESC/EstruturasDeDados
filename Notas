class GerenciadorNotas:
    def __init__(self):
        self.alunos = []
    
    def adicionar_aluno(self, nome, disciplina, nota):
        self.alunos.append({
            'nome': nome,
            'disciplina': disciplina,
            'nota': nota
        })
    
    def ordenar_por(self, criterio):
        if criterio == 'nome':
            return sorted(self.alunos, key=lambda x: x['nome'])
        elif criterio == 'disciplina':
            return sorted(self.alunos, key=lambda x: x['disciplina'])
        elif criterio == 'nota':
            return sorted(self.alunos, key=lambda x: x['nota'], reverse=True)
        else:
            return self.alunos
    
    def buscar_aluno(self, nome=None, disciplina=None, nota_min=None, nota_max=None):
        resultados = self.alunos
        if nome:
            resultados = [a for a in resultados if nome.lower() in a['nome'].lower()]
        if disciplina:
            resultados = [a for a in resultados if disciplina.lower() in a['disciplina'].lower()]
        if nota_min is not None:
            resultados = [a for a in resultados if a['nota'] >= nota_min]
        if nota_max is not None:
            resultados = [a for a in resultados if a['nota'] <= nota_max]
        return resultados

# Exemplo de uso
if __name__ == "__main__":
    sistema = GerenciadorNotas()
    sistema.adicionar_aluno("João Silva", "Matemática", 8.5)
    sistema.adicionar_aluno("Maria Oliveira", "Português", 9.2)
    sistema.adicionar_aluno("Carlos Souza", "Matemática", 7.8)
    
    print("Ordenados por nota:")
    for aluno in sistema.ordenar_por('nota'):
        print(f"{aluno['nome']}: {aluno['nota']}")
    
    print("\nBusca por Matemática:")
    for aluno in sistema.buscar_aluno(disciplina="Matemática"):
        print(f"{aluno['nome']} - {aluno['disciplina']}: {aluno['nota']}")
